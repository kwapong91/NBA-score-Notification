---
AWSTemplateFormatVersion: "2010-09-09"
Description: "NBA Scores Notification Infrastructure"

Resources:

  # SNS Topic
  SNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: "NBA_scores"
      TopicName: "Sports_score"

  # IAM Role for Lambda Execution
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "LambdaBasicExecution"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: "Allow"
                Action: "sns:Publish"
                Resource: !Ref SNSTopic

  # EventBridge Scheduler
  EventBridgeScheduler:
    Type: "AWS::Scheduler::Schedule"
    Properties:
      ScheduleExpression: "cron(0 23 ? * 6 *)"
      FlexibleTimeWindow:
        Mode: "OFF"
      Target:
        Arn: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:gd_notification"
        RoleArn: !GetAtt LambdaExecutionRole.Arn
      State: "ENABLED"
      Description: "Trigger Lambda function for NBA scores"
      Name: "ScoreUpdate"

Outputs:
  SNSTopicArn:
    Description: "ARN of the SNS Topic"
    Value: !Ref SNSTopic

  SchedulerName:
    Description: "Name of the EventBridge Scheduler"
    Value: !Ref EventBridgeScheduler

  LambdaExecutionRoleArn:
    Description: "ARN of the IAM Role for Lambda Execution"
    Value: !GetAtt LambdaExecutionRole.Arx
